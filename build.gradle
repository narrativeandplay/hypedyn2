plugins {
    id "com.github.hierynomus.license" version "0.14.0"
    id "com.github.ben-manes.versions" version "0.15.0"
    id "com.adtran.scala-multiversion-plugin" version "1.0.28" apply false
}

apply from: 'javafx.plugin'

dependencies {
    compile project(':ui')
}

javafx {
    appName 'HypeDyn 2'
    mainClass 'org.narrativeandplay.hypedyn.ui.Main'
}

version = "1.0"

// Ignore non-release versions when checking for dependency updates
dependencyUpdates.resolutionStrategy = {
    componentSelection { rules ->
        rules.all { ComponentSelection selection ->
            boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm'].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
            }
            if (rejected) {
                selection.reject('Release candidate')
            }
        }
    }
}

allprojects {
    apply plugin: 'scala'
    apply plugin: "com.adtran.scala-multiversion-plugin"

    repositories {
        jcenter()
        mavenCentral()

        flatDir {
            dirs "${rootDir.path}/libs"
        }
    }

    sourceCompatibility = 1.8

    dependencies {
        compile "org.scala-lang:scala-library:%scala-version%"

        testCompile 'junit:junit:4.12'
        testCompile "org.scalatest:scalatest_%%:3.0.4"
        testRuntime "org.scala-lang.modules:scala-xml_%%:1.0.6"
    }

    tasks.withType(ScalaCompile) {
        scalaCompileOptions.with {
            additionalParameters = [
                    "-Xexperimental", // for Single Abstract Method conversion support without needing implicits
                    "-Xlint:-nullary-unit,-unused,_",
                    "-feature",
                    "-Xfatal-warnings",
                    "-deprecation",
                    "-unchecked"
            ]
        }
    }
}

subprojects {
    archivesBaseName = "hypedyn-${project.name}"
}
